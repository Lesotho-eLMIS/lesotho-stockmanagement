/*
 * This program is part of the OpenLMIS logistics management information system platform software.
 * Copyright © 2017 VillageReach
 *
 * This program is free software: you can redistribute it and/or modify it under the terms
 * of the GNU Affero General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details. You should have received a copy of
 * the GNU Affero General Public License along with this program. If not, see
 * http://www.gnu.org/licenses.  For additional information contact info@OpenLMIS.org.
 */

package org.openlmis.stockmanagement.dto;

import static java.time.ZonedDateTime.now;
import static org.apache.commons.collections.CollectionUtils.isEmpty;

import java.time.ZonedDateTime;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import org.openlmis.stockmanagement.domain.complaint.Complaint;
import org.openlmis.stockmanagement.domain.complaint.ComplaintLineItem;
import org.openlmis.stockmanagement.util.ComplaintProcessContext;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class ComplaintDto {

  private UUID id;

  private UUID facilityId;

  private UUID userId;

  private String userNames;

   private ZonedDateTime occurredDate;

  private String invoiceNumber;

  private String purchaseOrderNumber;

  private List<ComplaintLineItemDto> lineItems;

  private ComplaintProcessContext context;


  /**
   * Convert dto to jpa model.
   *
   * @return the converted jpa model object.
   */
  public Complaint toComplaint() {
    List<ComplaintLineItem> domainLines = this.lineItems
        .stream()
        .map(ComplaintLineItemDto::toComplaintLineItem)
        .collect(Collectors.toList());

    Complaint complaint = new Complaint(facilityId, context.getCurrentUserId(),
        context.getCurrentUserNames(), now(),//processed date generated by server side
        invoiceNumber, purchaseOrderNumber, domainLines);

    domainLines.forEach(lineItem -> {
      lineItem.setComplaint(complaint);
    });

    return complaint;
  }

  public boolean hasLineItems() {
    return !isEmpty(getLineItems());
  }

}
